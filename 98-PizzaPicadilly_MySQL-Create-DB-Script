-- MySQL Script generated by MySQL Workbench
-- Tue May 16 14:24:41 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema PizzaPicadilly
-- -----------------------------------------------------
-- 98-Pizza Shop exercise

-- -----------------------------------------------------
-- Schema PizzaPicadilly
--
-- 98-Pizza Shop exercise
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `PizzaPicadilly` DEFAULT CHARACTER SET utf8 ;
USE `PizzaPicadilly` ;

-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`user` (
  `idUserName` INT NOT NULL AUTO_INCREMENT,
  `idCustomer` INT NULL,
  `username` VARCHAR(16) NOT NULL,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(32) NOT NULL,
  `create_time` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUserName`));


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`checkingAcct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`checkingAcct` (
  `idcheckingAcct` INT NOT NULL AUTO_INCREMENT,
  `bankNumber` INT NOT NULL COMMENT 'Bank routing',
  `acctNumber` INT NULL,
  `acctHolderName` VARCHAR(45) NULL,
  `acctStreet` VARCHAR(45) NULL,
  `acctCity` VARCHAR(45) NULL,
  `acctState` VARCHAR(45) NULL,
  `acctZip` VARCHAR(45) NULL,
  `idCustomer` INT NOT NULL COMMENT 'FK',
  PRIMARY KEY (`idcheckingAcct`),
  UNIQUE INDEX `idcreditCards_UNIQUE` (`idcheckingAcct` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`contact`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`contact` (
  `idContact` INT UNSIGNED NOT NULL,
  `contactType` INT NULL COMMENT 'Customer\nManufacturer\nSupplier\n',
  `contactStreet1` VARCHAR(45) NULL,
  `contactStreet2` VARCHAR(45) NULL,
  `contactCity` VARCHAR(45) NULL,
  `contactState` VARCHAR(2) NULL,
  `contactZip` VARCHAR(5) NULL,
  `contactPhone1` VARCHAR(45) NULL,
  `contactPhone2` VARCHAR(45) NULL,
  `contactEmail` VARCHAR(45) NULL,
  `idCustomer` INT NULL COMMENT 'FK mutually excludes supplierID and manufacturerID\n',
  `supplierID` INT NULL COMMENT 'FK mutually excludes cutomerID and manufacturerID\n',
  PRIMARY KEY (`idContact`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`CustomerProfile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`CustomerProfile` (
  `idCustomerProfile` INT NOT NULL,
  PRIMARY KEY (`idCustomerProfile`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`customer` (
  `idCustomer` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `customerName` VARCHAR(45) NULL,
  `user_idUserName` INT NOT NULL,
  `creditCard1ID` INT NULL COMMENT 'Security concern:   Should be random number using some form of encryption for credit card number and security digits\n4 for Amex\n3 for others.',
  `creditCard2ID` INT NULL COMMENT 'Security concern:   Should be random number using some form of encryption for credit card number and security digits\n4 for Amex\n3 for others.',
  `creditCard3ID` INT NULL,
  `checkingAcctID` VARCHAR(45) NULL,
  `checkingAcct_idcheckingAcct` INT NOT NULL,
  `contact_idcontacts` INT UNSIGNED NOT NULL,
  `CustomerProfile_idCustomerProfile` INT NOT NULL,
  PRIMARY KEY (`idCustomer`, `user_idUserName`, `checkingAcct_idcheckingAcct`, `contact_idcontacts`, `CustomerProfile_idCustomerProfile`),
  UNIQUE INDEX `idCustomer_UNIQUE` (`idCustomer` ASC),
  UNIQUE INDEX `creditCard1ID_UNIQUE` (`creditCard1ID` ASC),
  UNIQUE INDEX `creditCard2ID_UNIQUE` (`creditCard2ID` ASC),
  UNIQUE INDEX `creditCard3ID_UNIQUE` (`creditCard3ID` ASC),
  UNIQUE INDEX `checkingAcctID_UNIQUE` (`checkingAcctID` ASC),
  INDEX `fk_customer_user_idx` (`user_idUserName` ASC),
  INDEX `fk_customer_checkingAcct1_idx` (`checkingAcct_idcheckingAcct` ASC),
  INDEX `fk_customer_contact1_idx` (`contact_idcontacts` ASC),
  INDEX `fk_customer_CustomerProfile1_idx` (`CustomerProfile_idCustomerProfile` ASC),
  CONSTRAINT `fk_customer_user`
    FOREIGN KEY (`user_idUserName`)
    REFERENCES `PizzaPicadilly`.`user` (`idUserName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_checkingAcct1`
    FOREIGN KEY (`checkingAcct_idcheckingAcct`)
    REFERENCES `PizzaPicadilly`.`checkingAcct` (`idcheckingAcct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_contact1`
    FOREIGN KEY (`contact_idcontacts`)
    REFERENCES `PizzaPicadilly`.`contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_customer_CustomerProfile1`
    FOREIGN KEY (`CustomerProfile_idCustomerProfile`)
    REFERENCES `PizzaPicadilly`.`CustomerProfile` (`idCustomerProfile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`otherProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`otherProduct` (
  `idotherProducts` INT NOT NULL AUTO_INCREMENT COMMENT ' a product ID\n drink description\n manufacturer\n supplier\n price\n',
  `productType` VARCHAR(45) NULL COMMENT 'Beverage\nPastry\nIce cream\n',
  `productName` VARCHAR(45) NULL,
  `Description` VARCHAR(45) NULL,
  `Brand` VARCHAR(45) NULL,
  `idSupplier` VARCHAR(45) NULL,
  `Cost` DECIMAL(2) NULL,
  `Price` DECIMAL(2) NULL,
  `Markup` DECIMAL NULL,
  `barCode` VARCHAR(45) NULL COMMENT 'Product Code is bar code or some other alpha/numeric descriptor',
  `productSKU` VARCHAR(45) NULL COMMENT 'Business',
  PRIMARY KEY (`idotherProducts`),
  UNIQUE INDEX `idotherProducts_UNIQUE` (`idotherProducts` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`recipe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`recipe` (
  `idRecipes` INT NOT NULL AUTO_INCREMENT COMMENT 'Recipes are the basic ingredients that make up a particular product.  It establishes base cost for the pies.\n\nWe can choose to increase price based on cost or increase ingredients according to size.\n\nEach order is comprised of a specific recipe. ',
  `pizzaName` VARCHAR(45) NULL COMMENT 'FK\n',
  `crustStandard` VARCHAR(45) NULL,
  `cheeseType` VARCHAR(45) NULL,
  `toppings` VARCHAR(255) NULL,
  PRIMARY KEY (`idRecipes`),
  UNIQUE INDEX `idRecipes_UNIQUE` (`idRecipes` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`deliveryAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`deliveryAddress` (
  `idDelivery` INT NOT NULL AUTO_INCREMENT,
  `deliveryStreet1` VARCHAR(45) NULL,
  `deliveryStreet2` VARCHAR(45) NULL,
  `deliveryCity` VARCHAR(45) NULL,
  `deliveryState` VARCHAR(2) NULL,
  `deliveryZip` VARCHAR(5) NULL,
  `deliveryPhone1` VARCHAR(45) NULL,
  `deliveryPhone2` VARCHAR(45) NULL,
  `idCustomer` INT NULL COMMENT 'FK \n',
  `customer_idCustomer` INT UNSIGNED NOT NULL,
  `customer_user_idUserName` INT NOT NULL,
  `customer_checkingAcct_idcheckingAcct` INT NOT NULL,
  `customer_contact_idcontacts` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idDelivery`, `customer_idCustomer`, `customer_user_idUserName`, `customer_checkingAcct_idcheckingAcct`, `customer_contact_idcontacts`),
  INDEX `fk_deliveryAddress_customer1_idx` (`customer_idCustomer` ASC, `customer_user_idUserName` ASC, `customer_checkingAcct_idcheckingAcct` ASC, `customer_contact_idcontacts` ASC),
  CONSTRAINT `fk_deliveryAddress_customer1`
    FOREIGN KEY (`customer_idCustomer` , `customer_user_idUserName` , `customer_checkingAcct_idcheckingAcct` , `customer_contact_idcontacts`)
    REFERENCES `PizzaPicadilly`.`customer` (`idCustomer` , `user_idUserName` , `checkingAcct_idcheckingAcct` , `contact_idcontacts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`paymentType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`paymentType` (
  `idpaymentType` INT NOT NULL,
  `paymentType` VARCHAR(45) NULL,
  `idCustomer` INT NULL COMMENT 'Cash\nCheck\nCredit Card\nGift Card\nCoupon\n\n',
  PRIMARY KEY (`idpaymentType`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`pizzaPriceList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`pizzaPriceList` (
  `idpizzaPriceList` INT NOT NULL AUTO_INCREMENT COMMENT 'Price list establishes pricing for each configuration of pies.\n\nEach pie size has differing amounts of ingredients that affect price.\n\npizzaCode uniquely identifies pieSize + recipe.\n\nDo we include a percentage increase in cost to cover more ingredients?\n\nField descriptions:\n\nidPiaaPriceList\nidPizzaProduct\npieSize\npizzaCode: unique code for pizza product + size\nCost:  base code of this pie in this size\nMarkup: desired profit margin.\nDiscount: % of discount in price\nPrice: current price for the pie.\nPrice = (cost + markup) - discount\n\n',
  `idPizzaProduct` INT NULL,
  `pieSize` INT NULL,
  `pizzaCode` VARCHAR(15) NULL,
  `cost` DECIMAL(2) NULL,
  `markup` DECIMAL(2) NULL,
  `discount` DECIMAL(2) NULL,
  `price` DECIMAL(2) NULL,
  PRIMARY KEY (`idpizzaPriceList`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`Ingredients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`Ingredients` (
  `idIngredients` INT NOT NULL AUTO_INCREMENT COMMENT 'Ingredients gives cost per ounce and weight of ingredients for each pie.  This allows calculations of ingredient costs by size.\nSausage\nSmall pie = 4 oz\nMedium pie = 6 oz\nLarge pie = 12 oz\nExtraLarge',
  `ingredientName` VARCHAR(45) NULL,
  `costPerOz` DECIMAL(2) NULL,
  `ozInSmall` DECIMAL(2) NULL,
  `ozInMedium` DECIMAL(2) NULL,
  `ozInLarge` DECIMAL(2) NULL,
  `ozInExtraLarge` DECIMAL(2) NULL,
  `idSupplier` VARCHAR(45) NULL,
  `productSKU` VARCHAR(45) NULL,
  PRIMARY KEY (`idIngredients`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`extraIngredientList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`extraIngredientList` (
  `idaddOn` INT NOT NULL COMMENT 'Add on items for custom orders\n\n',
  `ingredients` VARCHAR(45) NULL,
  `Ingredients_idIngredients` INT NOT NULL,
  PRIMARY KEY (`idaddOn`, `Ingredients_idIngredients`),
  INDEX `fk_extraIngredientList_Ingredients1_idx` (`Ingredients_idIngredients` ASC),
  CONSTRAINT `fk_extraIngredientList_Ingredients1`
    FOREIGN KEY (`Ingredients_idIngredients`)
    REFERENCES `PizzaPicadilly`.`Ingredients` (`idIngredients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`order` (
  `idorder` INT NOT NULL,
  `pizzaCode` INT NULL,
  `productName` VARCHAR(45) NULL,
  `idRecipe` VARCHAR(45) NULL,
  `size` INT NULL,
  `crustType` VARCHAR(45) NULL,
  `customer_idCustomer` INT UNSIGNED NOT NULL,
  `customer_user_idUserName` INT NOT NULL,
  `customer_checkingAcct_idcheckingAcct` INT NOT NULL,
  `customer_contact_idcontacts` INT UNSIGNED NOT NULL,
  `idDeliveryAddress` INT NULL,
  `idOtherProducts` INT NULL,
  `quantity` INT NULL,
  `deliveryAddress_idDelivery` INT NOT NULL,
  `deliveryAddress_customer_idCustomer` INT UNSIGNED NOT NULL,
  `deliveryAddress_customer_user_idUserName` INT NOT NULL,
  `deliveryAddress_customer_checkingAcct_idcheckingAcct` INT NOT NULL,
  `deliveryAddress_customer_contact_idcontacts` INT UNSIGNED NOT NULL,
  `contact_idContact` INT UNSIGNED NOT NULL,
  `paymentType_idpaymentType` INT NOT NULL,
  `otherProduct_idotherProducts` INT NOT NULL,
  `pizzaPriceList_idpizzaPriceList` INT NOT NULL,
  `extraIngredientList_idaddOn` INT NOT NULL,
  PRIMARY KEY (`idorder`, `customer_idCustomer`, `customer_user_idUserName`, `customer_checkingAcct_idcheckingAcct`, `customer_contact_idcontacts`, `deliveryAddress_idDelivery`, `deliveryAddress_customer_idCustomer`, `deliveryAddress_customer_user_idUserName`, `deliveryAddress_customer_checkingAcct_idcheckingAcct`, `deliveryAddress_customer_contact_idcontacts`, `contact_idContact`, `paymentType_idpaymentType`, `otherProduct_idotherProducts`, `pizzaPriceList_idpizzaPriceList`, `extraIngredientList_idaddOn`),
  INDEX `fk_order_customer1_idx` (`customer_idCustomer` ASC, `customer_user_idUserName` ASC, `customer_checkingAcct_idcheckingAcct` ASC, `customer_contact_idcontacts` ASC),
  INDEX `fk_order_deliveryAddress1_idx` (`deliveryAddress_idDelivery` ASC, `deliveryAddress_customer_idCustomer` ASC, `deliveryAddress_customer_user_idUserName` ASC, `deliveryAddress_customer_checkingAcct_idcheckingAcct` ASC, `deliveryAddress_customer_contact_idcontacts` ASC),
  INDEX `fk_order_contact1_idx` (`contact_idContact` ASC),
  INDEX `fk_order_paymentType1_idx` (`paymentType_idpaymentType` ASC),
  INDEX `fk_order_otherProduct1_idx` (`otherProduct_idotherProducts` ASC),
  INDEX `fk_order_pizzaPriceList1_idx` (`pizzaPriceList_idpizzaPriceList` ASC),
  INDEX `fk_order_extraIngredientList1_idx` (`extraIngredientList_idaddOn` ASC),
  CONSTRAINT `fk_order_customer1`
    FOREIGN KEY (`customer_idCustomer` , `customer_user_idUserName` , `customer_checkingAcct_idcheckingAcct` , `customer_contact_idcontacts`)
    REFERENCES `PizzaPicadilly`.`customer` (`idCustomer` , `user_idUserName` , `checkingAcct_idcheckingAcct` , `contact_idcontacts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_deliveryAddress1`
    FOREIGN KEY (`deliveryAddress_idDelivery` , `deliveryAddress_customer_idCustomer` , `deliveryAddress_customer_user_idUserName` , `deliveryAddress_customer_checkingAcct_idcheckingAcct` , `deliveryAddress_customer_contact_idcontacts`)
    REFERENCES `PizzaPicadilly`.`deliveryAddress` (`idDelivery` , `customer_idCustomer` , `customer_user_idUserName` , `customer_checkingAcct_idcheckingAcct` , `customer_contact_idcontacts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_contact1`
    FOREIGN KEY (`contact_idContact`)
    REFERENCES `PizzaPicadilly`.`contact` (`idContact`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_paymentType1`
    FOREIGN KEY (`paymentType_idpaymentType`)
    REFERENCES `PizzaPicadilly`.`paymentType` (`idpaymentType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_otherProduct1`
    FOREIGN KEY (`otherProduct_idotherProducts`)
    REFERENCES `PizzaPicadilly`.`otherProduct` (`idotherProducts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_pizzaPriceList1`
    FOREIGN KEY (`pizzaPriceList_idpizzaPriceList`)
    REFERENCES `PizzaPicadilly`.`pizzaPriceList` (`idpizzaPriceList`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_extraIngredientList1`
    FOREIGN KEY (`extraIngredientList_idaddOn`)
    REFERENCES `PizzaPicadilly`.`extraIngredientList` (`idaddOn`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`pieType`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`pieType` (
  `idpieType` INT NOT NULL COMMENT 'Deep dish\nThin crust\nCustom',
  `pieType` VARCHAR(45) NULL COMMENT 'Standard\nCustom\nThin Crust\nDeep Dish\nGlutenFree\nWholeWheat\n\n',
  `order_idorder` INT NOT NULL,
  `order_customer_idCustomer` INT UNSIGNED NOT NULL,
  `order_customer_user_idUserName` INT NOT NULL,
  `order_customer_checkingAcct_idcheckingAcct` INT NOT NULL,
  `order_customer_contact_idcontacts` INT UNSIGNED NOT NULL,
  `order_deliveryAddress_idDelivery` INT NOT NULL,
  `order_deliveryAddress_customer_idCustomer` INT UNSIGNED NOT NULL,
  `order_deliveryAddress_customer_user_idUserName` INT NOT NULL,
  `order_deliveryAddress_customer_checkingAcct_idcheckingAcct` INT NOT NULL,
  `order_deliveryAddress_customer_contact_idcontacts` INT UNSIGNED NOT NULL,
  `order_contact_idContact` INT UNSIGNED NOT NULL,
  `order_paymentType_idpaymentType` INT NOT NULL,
  `order_otherProduct_idotherProducts` INT NOT NULL,
  PRIMARY KEY (`idpieType`, `order_idorder`, `order_customer_idCustomer`, `order_customer_user_idUserName`, `order_customer_checkingAcct_idcheckingAcct`, `order_customer_contact_idcontacts`, `order_deliveryAddress_idDelivery`, `order_deliveryAddress_customer_idCustomer`, `order_deliveryAddress_customer_user_idUserName`, `order_deliveryAddress_customer_checkingAcct_idcheckingAcct`, `order_deliveryAddress_customer_contact_idcontacts`, `order_contact_idContact`, `order_paymentType_idpaymentType`, `order_otherProduct_idotherProducts`),
  INDEX `fk_pieType_order1_idx` (`order_idorder` ASC, `order_customer_idCustomer` ASC, `order_customer_user_idUserName` ASC, `order_customer_checkingAcct_idcheckingAcct` ASC, `order_customer_contact_idcontacts` ASC, `order_deliveryAddress_idDelivery` ASC, `order_deliveryAddress_customer_idCustomer` ASC, `order_deliveryAddress_customer_user_idUserName` ASC, `order_deliveryAddress_customer_checkingAcct_idcheckingAcct` ASC, `order_deliveryAddress_customer_contact_idcontacts` ASC, `order_contact_idContact` ASC, `order_paymentType_idpaymentType` ASC, `order_otherProduct_idotherProducts` ASC),
  CONSTRAINT `fk_pieType_order1`
    FOREIGN KEY (`order_idorder` , `order_customer_idCustomer` , `order_customer_user_idUserName` , `order_customer_checkingAcct_idcheckingAcct` , `order_customer_contact_idcontacts` , `order_deliveryAddress_idDelivery` , `order_deliveryAddress_customer_idCustomer` , `order_deliveryAddress_customer_user_idUserName` , `order_deliveryAddress_customer_checkingAcct_idcheckingAcct` , `order_deliveryAddress_customer_contact_idcontacts` , `order_contact_idContact` , `order_paymentType_idpaymentType` , `order_otherProduct_idotherProducts`)
    REFERENCES `PizzaPicadilly`.`order` (`idorder` , `customer_idCustomer` , `customer_user_idUserName` , `customer_checkingAcct_idcheckingAcct` , `customer_contact_idcontacts` , `deliveryAddress_idDelivery` , `deliveryAddress_customer_idCustomer` , `deliveryAddress_customer_user_idUserName` , `deliveryAddress_customer_checkingAcct_idcheckingAcct` , `deliveryAddress_customer_contact_idcontacts` , `contact_idContact` , `paymentType_idpaymentType` , `otherProduct_idotherProducts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`pizzaProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`pizzaProduct` (
  `idpizzaProducts` INT NOT NULL AUTO_INCREMENT,
  `pizzaName` VARCHAR(45) NULL,
  `idRecipe` INT NULL,
  `recipe_idRecipes` INT NOT NULL,
  `pieType_idpieType` INT NOT NULL,
  PRIMARY KEY (`idpizzaProducts`, `recipe_idRecipes`, `pieType_idpieType`),
  UNIQUE INDEX `idpizzaProducts_UNIQUE` (`idpizzaProducts` ASC),
  INDEX `fk_pizzaProduct_recipe1_idx` (`recipe_idRecipes` ASC),
  INDEX `fk_pizzaProduct_pieType1_idx` (`pieType_idpieType` ASC),
  CONSTRAINT `fk_pizzaProduct_recipe1`
    FOREIGN KEY (`recipe_idRecipes`)
    REFERENCES `PizzaPicadilly`.`recipe` (`idRecipes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pizzaProduct_pieType1`
    FOREIGN KEY (`pieType_idpieType`)
    REFERENCES `PizzaPicadilly`.`pieType` (`idpieType`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`creditCard`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`creditCard` (
  `idcreditCards` INT NOT NULL AUTO_INCREMENT,
  `cardNumber` INT NOT NULL,
  `cvvNumber` INT NULL,
  `cardName` VARCHAR(45) NULL,
  `billStreet` VARCHAR(45) NULL,
  `billCity` VARCHAR(45) NULL,
  `billState` VARCHAR(45) NULL,
  `billZip` VARCHAR(45) NULL COMMENT 'TABLE IS ENCRYPTED\ncardNumber + idCustomer + ??',
  `idCustomer` INT NOT NULL COMMENT 'FK',
  `customer_idCustomer` INT UNSIGNED NOT NULL,
  `customer_user_idUserName` INT NOT NULL,
  PRIMARY KEY (`idcreditCards`, `customer_idCustomer`, `customer_user_idUserName`),
  UNIQUE INDEX `idcreditCards_UNIQUE` (`idcreditCards` ASC),
  INDEX `fk_creditCard_customer1_idx` (`customer_idCustomer` ASC, `customer_user_idUserName` ASC),
  CONSTRAINT `fk_creditCard_customer1`
    FOREIGN KEY (`customer_idCustomer` , `customer_user_idUserName`)
    REFERENCES `PizzaPicadilly`.`customer` (`idCustomer` , `user_idUserName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`productSupplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`productSupplier` (
  `idSupplier` INT NOT NULL AUTO_INCREMENT,
  `supplierName` VARCHAR(45) NULL,
  `idContact` VARCHAR(45) NULL,
  `productSKU` VARCHAR(45) NULL,
  PRIMARY KEY (`idSupplier`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`recipe_has_Ingredients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`recipe_has_Ingredients` (
  `recipe_idRecipes` INT NOT NULL,
  `Ingredients_idIngredients` INT NOT NULL,
  PRIMARY KEY (`recipe_idRecipes`, `Ingredients_idIngredients`),
  INDEX `fk_recipe_has_Ingredients_Ingredients1_idx` (`Ingredients_idIngredients` ASC),
  INDEX `fk_recipe_has_Ingredients_recipe1_idx` (`recipe_idRecipes` ASC),
  CONSTRAINT `fk_recipe_has_Ingredients_recipe1`
    FOREIGN KEY (`recipe_idRecipes`)
    REFERENCES `PizzaPicadilly`.`recipe` (`idRecipes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_recipe_has_Ingredients_Ingredients1`
    FOREIGN KEY (`Ingredients_idIngredients`)
    REFERENCES `PizzaPicadilly`.`Ingredients` (`idIngredients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`otherProductSupplier_has_otherProduct`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`otherProductSupplier_has_otherProduct` (
  `otherProductSupplier_idSupplier` INT NOT NULL,
  `otherProduct_idotherProducts` INT NOT NULL,
  `otherProductSupplier_has_otherProduct_otherProductSupplier_idSupplier` INT NOT NULL,
  `otherProductSupplier_has_otherProduct_otherProduct_idotherProducts` INT NOT NULL,
  PRIMARY KEY (`otherProductSupplier_idSupplier`, `otherProduct_idotherProducts`),
  INDEX `fk_otherProductSupplier_has_otherProduct_otherProduct1_idx` (`otherProduct_idotherProducts` ASC),
  INDEX `fk_otherProductSupplier_has_otherProduct_otherProductSuppli_idx` (`otherProductSupplier_idSupplier` ASC),
  INDEX `fk_otherProductSupplier_has_otherProduct_otherProductSuppli_idx1` (`otherProductSupplier_has_otherProduct_otherProductSupplier_idSupplier` ASC, `otherProductSupplier_has_otherProduct_otherProduct_idotherProducts` ASC),
  CONSTRAINT `fk_otherProductSupplier_has_otherProduct_otherProductSupplier1`
    FOREIGN KEY (`otherProductSupplier_idSupplier`)
    REFERENCES `PizzaPicadilly`.`productSupplier` (`idSupplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_otherProductSupplier_has_otherProduct_otherProduct1`
    FOREIGN KEY (`otherProduct_idotherProducts`)
    REFERENCES `PizzaPicadilly`.`otherProduct` (`idotherProducts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_otherProductSupplier_has_otherProduct_otherProductSupplier2`
    FOREIGN KEY (`otherProductSupplier_has_otherProduct_otherProductSupplier_idSupplier` , `otherProductSupplier_has_otherProduct_otherProduct_idotherProducts`)
    REFERENCES `PizzaPicadilly`.`otherProductSupplier_has_otherProduct` (`otherProductSupplier_idSupplier` , `otherProduct_idotherProducts`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`productSupplier_has_Ingredients`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`productSupplier_has_Ingredients` (
  `productSupplier_idSupplier` INT NOT NULL,
  `Ingredients_idIngredients` INT NOT NULL,
  PRIMARY KEY (`productSupplier_idSupplier`, `Ingredients_idIngredients`),
  INDEX `fk_productSupplier_has_Ingredients_Ingredients1_idx` (`Ingredients_idIngredients` ASC),
  INDEX `fk_productSupplier_has_Ingredients_productSupplier1_idx` (`productSupplier_idSupplier` ASC),
  CONSTRAINT `fk_productSupplier_has_Ingredients_productSupplier1`
    FOREIGN KEY (`productSupplier_idSupplier`)
    REFERENCES `PizzaPicadilly`.`productSupplier` (`idSupplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productSupplier_has_Ingredients_Ingredients1`
    FOREIGN KEY (`Ingredients_idIngredients`)
    REFERENCES `PizzaPicadilly`.`Ingredients` (`idIngredients`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `PizzaPicadilly`.`stateSalesTax`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`stateSalesTax` (
  `idstateTax` INT NOT NULL AUTO_INCREMENT COMMENT 'The stateSalesTax table contains a list of all states in the company’s service area.  Available information includes:\nState Name\nState Abbreviation\nSales Tax Rate',
  `stateName` VARCHAR(45) NULL,
  `stateAbbeviation` VARCHAR(2) NULL,
  `taxRate` DECIMAL(2) NULL,
  PRIMARY KEY (`idstateTax`))
ENGINE = InnoDB;

USE `PizzaPicadilly` ;

-- -----------------------------------------------------
-- Placeholder table for view `PizzaPicadilly`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `PizzaPicadilly`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `PizzaPicadilly`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `PizzaPicadilly`.`view1`;
USE `PizzaPicadilly`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
